{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["declare var firebase;\n\nexport class App {\n    constructor(\n        private userLoggedIn = false,\n        private authToken = null,\n        private user = null\n    ){\n        // This mostly gets called on subsequent page loads to determine\n        // what the current status of the user is with \"user\" being an object\n        // return by Firebase with credentials and other info inside of it\n        firebase.auth().onAuthStateChanged(user => {\n            this.userLoggedIn = user ? true : false;\n            this.user = user;\n        });\n      }\n  login(type) {\n        let provider;\n\n        // Determine which provider to use depending on provided type\n        // which is passed through from app.html\n        if (type === 'google') {\n            provider = new firebase.auth.GoogleAuthProvider();\n        } else if (type === 'facebook') {\n            provider = new firebase.auth.FacebookAuthProvider();\n        } else if (type === 'twitter') {\n            provider = new firebase.auth.TwitterAuthProvider();\n        }\n        if (type === 'username_password') {\n            firebase.auth().signInWithEmailAndPassword(this.username, this.password).catch(function (error) {\n                // Handle Errors here.\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                // [START_EXCLUDE]\n                if (errorCode === 'auth/wrong-password') {\n                    alert('Wrong password.');\n                } else {\n                    alert(errorMessage);\n                }\n                console.log(error);\n         \n                // [END_EXCLUDE]\n            });\n        }\n        \n\n        // Call the Firebase signin method for our provider\n        // then take the successful or failed result and deal with\n        // it accordingly.\n        firebase.auth().signInWithPopup(provider).then((result: any) => {\n            // The token for this session\n            this.authToken = result.credential.accessToken;\n\n            // The user object containing information about the current user\n            this.user = result.user;\n\n            // Set a class variable to true to state we are logged in\n            this.userLoggedIn = true;\n        }).catch(error => {\n            let errorCode = error.code;\n            let errorMessage = error.message;\n            let email = error.email;\n            let credential = error.credential;\n        });\n    }\n\n    logout() {\n        // Self-explanatory signout code\n        firebase.auth().signOut().then(() => {\n            this.userLoggedIn = false;\n        }).catch(error => {\n            throw new Error(error);\n        });\n    }\n    username = '';\n    password = '';\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}